apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.component.one.name }}
  namespace: {{ .Values.component.one.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.component.one.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.component.one.name }}
        app.kubernetes.io/version: "1.0.0"
    spec:
      imagePullSecrets:
        {{ toYaml .Values.imagePullSecrets }}
      containers:
        - name: service
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: Always
          env:
            - name: client_target
              value: {{ include "render-value" ( dict "value" .Values.component.one.clientTarget "context" .) }}
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 50m
              memory: 60Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.component.two.name }}
  namespace: {{ .Values.component.two.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.component.two.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.component.two.name }}
        app.kubernetes.io/version: "2.0.0"
    spec:
      imagePullSecrets:
        {{ toYaml .Values.imagePullSecrets }}
      containers:
        - name: service
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: Always
          env:
            - name: client_target
              value: {{ include "render-value" ( dict "value" .Values.component.two.clientTarget "context" .) }}
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 50m
              memory: 60Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.component.three.name }}
  namespace: {{ .Values.component.three.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.component.three.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.component.three.name }}
        app.kubernetes.io/version: "3.0.0"
    spec:
      imagePullSecrets:
        {{ toYaml .Values.imagePullSecrets }}
      containers:
        - name: service
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: Always
          env:
            - name: client_target
              value: {{ include "render-value" ( dict "value" .Values.component.three.clientTarget "context" .) }}
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 50m
              memory: 60Mi